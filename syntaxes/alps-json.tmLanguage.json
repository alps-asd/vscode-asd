{
    "name": "ALPS JSON",
    "scopeName": "source.json.alps",
    "fileTypes": ["json"],
    "patterns": [
        {
            "include": "#value"
        }
    ],
    "repository": {
        "array": {
            "begin": "\\[",
            "beginCaptures": {
                "0": { "name": "punctuation.definition.array.begin.json" }
            },
            "end": "\\]",
            "endCaptures": {
                "0": { "name": "punctuation.definition.array.end.json" }
            },
            "patterns": [
                {
                    "include": "#value"
                },
                {
                    "match": ",",
                    "name": "punctuation.separator.array.json"
                }
            ],
            "name": "meta.structure.array.json"
        },
        "comments": {
            "patterns": [
                {
                    "begin": "/\\*\\*(?!/)",
                    "captures": {
                        "0": { "name": "punctuation.definition.comment.json" }
                    },
                    "end": "\\*/",
                    "name": "comment.block.documentation.json"
                },
                {
                    "begin": "/\\*",
                    "captures": {
                        "0": { "name": "punctuation.definition.comment.json" }
                    },
                    "end": "\\*/",
                    "name": "comment.block.json"
                },
                {
                    "captures": {
                        "1": { "name": "punctuation.definition.comment.json" }
                    },
                    "match": "(//).*$\\n?",
                    "name": "comment.line.double-slash.js"
                }
            ]
        },
        "constant": {
            "match": "\\b(?:true|false|null)\\b",
            "name": "constant.language.json"
        },
        "number": {
            "match": "(?x:-?(?:0|[1-9]\\d*)(?:(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)?)",
            "name": "constant.numeric.json"
        },
        "object": {
            "begin": "\\{",
            "beginCaptures": {
                "0": { "name": "punctuation.definition.dictionary.begin.json" }
            },
            "end": "\\}",
            "endCaptures": {
                "0": { "name": "punctuation.definition.dictionary.end.json" }
            },
            "patterns": [
                {
                    "include": "#alpsKeywords"
                },
                {
                    "include": "#comments"
                },
                {
                    "begin": "\"",
                    "beginCaptures": {
                        "0": { "name": "punctuation.support.type.property-name.begin.json" }
                    },
                    "end": "\"",
                    "endCaptures": {
                        "0": { "name": "punctuation.support.type.property-name.end.json" }
                    },
                    "name": "string.json support.type.property-name.json",
                    "patterns": [
                        {
                            "include": "#stringcontent"
                        }
                    ]
                },
                {
                    "include": "#value"
                }
            ],
            "name": "meta.structure.dictionary.json"
        },
        "string": {
            "begin": "\"",
            "beginCaptures": {
                "0": { "name": "punctuation.definition.string.begin.json" }
            },
            "end": "\"",
            "endCaptures": {
                "0": { "name": "punctuation.definition.string.end.json" }
            },
            "name": "string.quoted.double.json",
            "patterns": [
                {
                    "include": "#stringcontent"
                }
            ]
        },
        "stringcontent": {
            "patterns": [
                {
                    "match": "(?x:                # turn on extended mode\n                     \\\\                # a literal backslash\n                     (?:               # ...followed by...\n                       [\"\\\\/bfnrt]     # one of these characters\n                       |               # ...or...\n                       u               # a u\n                       [0-9a-fA-F]{4}  # and four hex digits\n                     )\n                   )",
                    "name": "constant.character.escape.json"
                },
                {
                    "match": "\\\\.",
                    "name": "invalid.illegal.unrecognized-string-escape.json"
                }
            ]
        },
        "value": {
            "patterns": [
                {
                    "include": "#constant"
                },
                {
                    "include": "#number"
                },
                {
                    "include": "#string"
                },
                {
                    "include": "#array"
                },
                {
                    "include": "#object"
                },
                {
                    "include": "#comments"
                }
            ]
        },
        "alpsKeywords": {
            "patterns": [
                {
                    "match": "\"(alps|descriptor|id|href|name|type|rt|doc)\"\\s*:",
                    "captures": {
                        "1": { "name": "keyword.other.alps.json" }
                    }
                }
            ]
        }
    }
}
